"use client";
import { useCallback } from "react";
import { DropEvent, FileRejection, useDropzone } from "react-dropzone";

import { useTranslation } from "react-i18next";
import { toast } from "react-toastify";

const acceptFiles = {
    "image/png": [".png"],
    "image/jpeg": [".jpg", ".jpeg"],
    "image/webp": [".webp"],
    "image/avif": [".avif"],
    "image/gif": [".gif"],
    "image/vnd.microsoft.icon": [".ico"]
}


const DragAndDrop = () => {
    const { t } = useTranslation();
    
    const onDrop = useCallback((acceptedFiles: File[], filesRejections: FileRejection[], event: DropEvent) => {
        console.log(filesRejections);
        console.log(acceptedFiles);
        console.log(event);

        if(filesRejections.length > 0) {
            toast.error(t("invalidFile"));
        }

    }, [t]);
    
    const { getRootProps, getInputProps, isDragActive } = useDropzone({accept: acceptFiles, onDrop });
    
    return (
        // fill the whole page with this div
        <div {...getRootProps()} className="flex flex-col items-center justify-center w-full h-full">
        {/* if is drag active show modal with blur */}
        <div className={`${isDragActive ? "fixed z-10 w-full h-full bg-black bg-opacity-50 items-center" : "hidden"}`}>
        <svg aria-hidden="true" focusable="false" height="22" role="presentation" viewBox="0 0 24 24" width="22">

            <path stroke-linecap="round" stroke-linejoin="round" fill-opacity="0" stroke-dasharray=" 8 8" stroke-dashoffset="0" stroke="rgb(111,193,253)" stroke-opacity="1" stroke-width="2" d=" M-17.216999053955078,-15.315999984741211 C-22.246999740600586,-15.315999984741211 -26.363000869750977,-11.199999809265137 -26.363000869750977,-6.169000148773193 C-26.363000869750977,-6.169000148773193 -26.363000869750977,6.169000148773193 -26.363000869750977,6.169000148773193 C-26.363000869750977,11.199999809265137 -22.246999740600586,15.315999984741211 -17.216999053955078,15.315999984741211 C-17.216999053955078,15.315999984741211 17.216999053955078,15.315999984741211 17.216999053955078,15.315999984741211 C22.246999740600586,15.315999984741211 26.363000869750977,11.199999809265137 26.363000869750977,6.169000148773193 C26.363000869750977,6.169000148773193 26.363000869750977,-6.169000148773193 26.363000869750977,-6.169000148773193 C26.363000869750977,-11.199999809265137 22.246999740600586,-15.315999984741211 17.216999053955078,-15.315999984741211"></path>
            <path stroke-linecap="round" stroke-linejoin="round" fill-opacity="0" stroke="rgb(255,255,255)" stroke-opacity="1" stroke-width="2" d=" M12.499990463256836,-4.8376007080078125 C12.499990463256836,-4.8376007080078125 12.499990463256836,-11.182825088500977 12.499990463256836,-11.182825088500977 C12.499990463256836,-13.14282512664795 10.895990371704102,-14.745353698730469 8.936461448669434,-14.745353698730469 C6.976461887359619,-14.745353698730469 5.372461795806885,-13.14282512664795 5.372461795806885,-11.182825088500977 C5.372461795806885,-11.182825088500977 5.372461795806885,-4.8376007080078125 5.372461795806885,-4.8376007080078125 C5.372461795806885,-4.8376007080078125 5.372461795806885,-13.182825088500977 5.372461795806885,-13.182825088500977 C5.372461795806885,-15.14282512664795 3.7699332237243652,-16.74535369873047 1.8094618320465088,-16.74535369873047 C-0.15053820610046387,-16.74535369873047 -1.7545381784439087,-15.14282512664795 -1.7545381784439087,-13.182825088500977 C-1.7545381784439087,-13.182825088500977 -1.7545381784439087,-4.8376007080078125 -1.7545381784439087,-4.8376007080078125 C-1.7545381784439087,-4.8376007080078125 -1.7545381784439087,-13.182825088500977 -1.7545381784439087,-13.182825088500977 C-1.7545381784439087,-15.14282512664795 -3.3580667972564697,-16.74535369873047 -5.318066596984863,-16.74535369873047 C-7.278066635131836,-16.74535369873047 -8.88206672668457,-15.14282512664795 -8.88206672668457,-13.182825088500977 C-8.88206672668457,-13.182825088500977 -8.88206672668457,-4.650600910186768 -8.88206672668457,-4.650600910186768 C-8.88206672668457,-4.650600910186768 -8.88206672668457,7.60439920425415 -8.88206672668457,7.60439920425415 C-8.88206672668457,7.60439920425415 -11.809751510620117,5.132757186889648 -11.97360610961914,5.0074872970581055 C-13.448933601379395,3.7225003242492676 -15.628077507019043,3.6204874515533447 -17.01407814025879,5.0074872970581055 C-18.40007781982422,6.392487525939941 -18.246793746948242,8.534688949584961 -17.01407814025879,10.047016143798828 C-16.37980079650879,10.986275672912598 -11.716538429260254,17.618871688842773 -11.716538429260254,17.618871688842773 C-10.123066902160645,19.731870651245117 -7.6290669441223145,20.97439956665039 -4.982066631317139,20.97439956665039 C-4.982066631317139,20.97439956665039 11.386990547180176,20.97439956665039 11.386990547180176,20.97439956665039 C15.937990188598633,20.97439956665039 19.627933502197266,17.284927368164062 19.627933502197266,12.733399391174316 C19.627933502197266,12.733399391174316 19.627933502197266,-6.302824974060059 19.627933502197266,-6.302824974060059 C19.627933502197266,-8.262825012207031 18.023462295532227,-9.866353988647461 16.063461303710938,-9.866353988647461 C14.10399055480957,-9.866353988647461 12.499990463256836,-8.262825012207031 12.499990463256836,-6.302824974060059 C12.499990463256836,-6.302824974060059 12.499990463256836,-4.8376007080078125 12.499990463256836,-4.8376007080078125z"></path>
            </svg>
        </div>
            <p>{t("dragAndDrop")}</p>
        <input {...getInputProps()} />
        {isDragActive ? (
            <p>{t("dropHere")}</p>
        ) : (
            <p>{t("dragAndDrop")}</p>
        )}
        </div>
    );
};

export default DragAndDrop;